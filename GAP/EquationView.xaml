<base:BaseWindow x:Class="GAP.EquationView"
       xmlns:BLL="clr-namespace:GAP.BL;assembly=GAP.BL"            
        x:TypeArguments="BLL:Dataset"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:base="clr-namespace:GAP.ExtendedControls"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:control="clr-namespace:GAP.CustomControls;assembly=GAP.CustomControls"
        Style="{StaticResource WindowDialogResize}"
        WindowStartupLocation="CenterScreen"
        Title="Equation" Height="700" Width="750">
    <Window.Resources>
        <Style TargetType="ComboBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <BLL:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <BLL:IntToBooleanConverter x:Key="BoolConverter"/>
        <BLL:InverseBooleanConverter x:Key="InverseBoolConverter"/>
        <BLL:Operand1VisibilityConverter x:Key="Operand1VisibilityConverter"/>
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Boolean x:Key="False">False</system:Boolean>
    </Window.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Style="{StaticResource MaxHeightRowDefinition}"/>
                <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
            </Grid.RowDefinitions>
            <DataGrid MinHeight="120" x:Name="DataGrid1"  CanUserAddRows="False" AutoGenerateColumns="False" 
                      SelectedItem="{Binding SelectedEquation}" ItemsSource="{Binding Equations}" HeadersVisibility="Column" 
                      HorizontalAlignment="Stretch" >
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Color" Width="50" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:ColorPicker Width="40"
                                  Height="23"
                                  VerticalAlignment="Center"
                                  SelectedColor="{Binding Color, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Sr No" Width="50" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding SrNo}" Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Operand 1" Width="5*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Style="{StaticResource MaxWidthColumnDefinition}"/>
                                        <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Operand1,UpdateSourceTrigger=PropertyChanged}" 
                                              SelectedValue="{Binding ID, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                              SelectedItem="{Binding Operand1, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                              SelectedValuePath="ID"  Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <Button Margin="5 0 5 0" 
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.SelectOperand1Command}" 
                                            Grid.Column="1" Style="{StaticResource HyperLinkButtonStyle}" Content="Filter Dataset" 
                                            VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Operator" Width="3*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}" 
                                          SelectedItem="{Binding Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Operators}" >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock  Text="{Binding}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Rational No">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox VerticalContentAlignment="Center"   Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"        
                                         Text="{Binding RationalNumber, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Width="80"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Operand 2" Width="5*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid IsEnabled="{Binding IsLogOperator, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Style="{StaticResource MaxWidthColumnDefinition}"/>
                                        <ColumnDefinition Style="{StaticResource MinWidthColumnDefinition}"/>
                                        <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                                        <ColumnDefinition Style="{StaticResource MinWidthColumnDefinition}"/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Operand2}" 
                                          SelectedItem="{Binding Operand2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          DisplayMemberPath="Name" SelectedValuePath="ID" Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"/>
                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.SelectOperand2Command}" Grid.Column="2" Style="{StaticResource HyperLinkButtonStyle}" Content="Filter Dataset" VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button ToolTip="Validate and Add New" Width="32" Height="28" Tag="Images/AddButton.png" Style="{StaticResource ButtonImage}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.ValidateEquationCommand}" CommandParameter="{Binding}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Remove current equation" IsEnabled="{Binding IsFirstRow, Converter={StaticResource InverseBoolConverter}}" Width="32" Height="28" Tag="Images/DeleteButton.png" Style="{StaticResource ButtonImage}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.DeleteEquationCommand}" CommandParameter="{Binding}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <GroupBox Grid.Row="1" Style="{StaticResource MetroGroupBox}">
                <GroupBox.Header>
                    <TextBlock FontWeight="Bold" Text="Computed Calculation"/>
                </GroupBox.Header>
                <StackPanel>
                    <control:BindableRichTextBox IsReadOnly="True" Height="40" Focusable="False" Document="{Binding CalculationContent, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    <ToggleButton IsChecked="{Binding ViewSpreadsheet, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource HyperLinkToggleButtonStyle}" Content="{Binding ViewSpreadsheetContent}"/>
                    <DataGrid IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False"
                      HeadersVisibility="Column" CanUserResizeRows="False" AutoGenerateColumns="False"  MaxHeight="500" Visibility="{Binding ViewSpreadsheet,Converter={StaticResource BoolToVisibilityConverter},FallbackValue=Collapsed}" ItemsSource="{Binding CurrentObject.DepthAndCurves}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*" Binding="{Binding Depth}" Header="Depth"/>
                            <DataGridTextColumn Width="*" Binding="{Binding Curve}" Header="Curve"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Row="2" Style="{StaticResource MetroGroupBox}">
                <GroupBox.Header>
                    <TextBlock Text="Dataset Info" FontWeight="Bold"/>
                </GroupBox.Header>
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                        <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                        <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                        <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                        <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                    </Grid.RowDefinitions>

                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                            <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                            <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource MinWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{DynamicResource MaxWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource MinWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{DynamicResource MaxWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource MinWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="Dataset Name"/>
                        <TextBox Grid.Column="2" Width="150" Text="{Binding CurrentObject.Name, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock Grid.Column="4" Text="{DynamicResource Family}" />
                        <ComboBox Grid.Column="6" Width="100"
                                  ItemsSource="{Binding Families}" DisplayMemberPath="FamilyName"
                                  SelectedItem="{Binding SelectedFamily,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock Grid.Column="8" Text="{DynamicResource Units}" />
                        <ComboBox Grid.Column="10"  Width="100" ItemsSource="{Binding SelectedFamily.Units,
                                    Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    SelectedItem="{Binding SelectedUnit,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

                        <StackPanel Grid.Row="2" Grid.ColumnSpan="10" HorizontalAlignment="Center"  Orientation="Horizontal">
                            <RadioButton Margin="0 0 20 0" Content="TVD"
                         IsChecked="{Binding CurrentObject.IsTVD, Mode=TwoWay,Converter={StaticResource BoolConverter}, ConverterParameter={StaticResource True}}" />
                            <RadioButton Content="MD" IsChecked="{Binding CurrentObject.IsTVD, Mode=TwoWay, Converter={StaticResource BoolConverter}, ConverterParameter={StaticResource False}}" />
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Row="2" >
                        <Grid.RowDefinitions>
                            <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                            <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                            <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Style="{StaticResource MaxWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource MinWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource MaxWidthColumnDefinition}"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock  Text="{DynamicResource SystemNotes}"/>
                        <TextBox Grid.Row="2" Style="{StaticResource TextBoxNotesExpanded}" Text="{Binding CurrentObject.SystemNotes,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"  IsReadOnly="True" Focusable="False">
                            <TextBox.Resources>
                                <Style TargetType="ScrollBar" BasedOn="{StaticResource CustomScrollbar}">
                                    <Setter Property="Margin" Value="0 0 -3 0"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Width" Value="10"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>

                        <TextBlock Grid.Column="2" Text="{DynamicResource UserNotes}"/>
                        <TextBox Grid.Column="2" Grid.Row="2" Style="{StaticResource TextBoxNotesExpanded}" Text="{Binding CurrentObject.UserNotes}" HorizontalAlignment="Stretch" >
                            <TextBox.Resources>
                                <Style TargetType="ScrollBar" BasedOn="{StaticResource CustomScrollbar}">
                                    <Setter Property="Margin" Value="0 0 -3 0"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Width" Value="10"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                    </Grid>

                    <GroupBox Style="{StaticResource MetroGroupBox}"  Grid.Row="4" >
                        <GroupBox.Header>
                            <TextBlock Text="{DynamicResource CurveProperties}" FontWeight="Bold"/>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                                <ColumnDefinition Style="{StaticResource MaxWidthColumnDefinition}"/>
                                <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                            </Grid.ColumnDefinitions>
                            <GroupBox Style="{StaticResource LineStyleProperties}"/>
                            <GroupBox Grid.Column="2" Style="{StaticResource MarkerStyleProperties}"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </GroupBox>
            <StackPanel Grid.Row="3" HorizontalAlignment="Right" Orientation="Horizontal">
                <ContentControl Style="{StaticResource SaveCancelButton}"/>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</base:BaseWindow>
