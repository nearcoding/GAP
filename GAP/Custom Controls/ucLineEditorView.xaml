<UserControl x:Class="GAP.Custom_Controls.ucLineEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"  Foreground="White"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:BLL="clr-namespace:GAP.BL;assembly=GAP.BL"
             d:DesignHeight="500" d:DesignWidth="195">
    <UserControl.Resources>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BitmapImage x:Key="AddLineSegment" UriSource="../Images/AddLineSegment.png"/>
        <BitmapImage x:Key="DeleteLineSegment" UriSource="../Images/DeleteLineSegment.png"/>
        <BitmapImage x:Key="EditFreely" UriSource="../Images/EditFreely.png"/>
        <BitmapImage x:Key="EditLineSegment" UriSource="../Images/EditLineSegment.png"/>
        <BLL:ProjectIDToNameConverter x:Key="ProjectIDToNameConverter"/>
        <BLL:WellIDToNameConverter x:Key="WellIDToNameConverter"/>
        <BLL:DatasetIDToNameConverter x:Key="DatasetIDToNameConverter"/>
    </UserControl.Resources>
    <ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                <RowDefinition Height="10"/>
                <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                <RowDefinition Height="10"/>
                <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                <RowDefinition Style="{StaticResource MaxHeightRowDefinition}"/>
            </Grid.RowDefinitions>

            <GroupBox Style="{StaticResource MetroGroupBox}" HorizontalContentAlignment="Center">
                <GroupBox.Header>
                    <TextBlock Text="{DynamicResource CurveInformation}"/>
                </GroupBox.Header>
                <GroupBox.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource MinWidthColumnDefinition}"/>
                            <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                            <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                            <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                            <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                            <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Ref Project"/>
                        <TextBlock Grid.Column="2" Text="{Binding SubDataset.Project, Converter={StaticResource ProjectIDToNameConverter}}"/>

                        <TextBlock Text="Ref Well" Grid.Row="2"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding SubDataset.Well, Converter={StaticResource WellIDToNameConverter}}"/>

                        <TextBlock Grid.Row="4" Text="Ref Dataset"/>
                        <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding SubDataset.Dataset, Converter={StaticResource DatasetIDToNameConverter}}"/>
                    </Grid>
                </GroupBox.Content>
            </GroupBox>

            <Grid  HorizontalAlignment="Center" Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                    <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                    <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                    <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                    <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                    <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                    <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                    <RowDefinition Style="{StaticResource MinHeightRowDefinition}"/>
                    <RowDefinition Style="{StaticResource AutoHeightRowDefinition}"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                </Grid.ColumnDefinitions>

                <ToggleButton  Height="48" Width="50"  ToolTip="{DynamicResource AddLineSegmentText}" Margin="10 0 0 0" Grid.Row="0"
                       IsChecked="{Binding CanAddLineSegment, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ToggleButton.Content>
                        <Image  Source="{StaticResource AddLineSegment}"/>
                    </ToggleButton.Content>
                </ToggleButton>

                <ToggleButton Height="48" Width="50" Margin="10 0 0 0" ToolTip="{DynamicResource EditLineSegmentText}"  Grid.Row="2" Grid.Column="2"
                       IsChecked="{Binding CanEditLineSegment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ToggleButton.Content>
                        <Image Source="{StaticResource EditLineSegment}"/>
                    </ToggleButton.Content>
                </ToggleButton>

                <ToggleButton  Height="48" Width="50" ToolTip="{DynamicResource DeleteLineSegmentText}"  Margin="10 0 0 0" Grid.Row="4" 
                  IsChecked="{Binding CanDeleteLineSegment, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ToggleButton.Content>
                        <Image Source="{StaticResource DeleteLineSegment}"/>
                    </ToggleButton.Content>
                </ToggleButton>

                <ToggleButton  Height="48" Width="50" ToolTip="{DynamicResource EditLineFreely}"  Margin="10 0 0 0"  Grid.Row="6" 
                 IsChecked="{Binding CanEditFreely,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ToggleButton.Content>
                        <Image Source="{StaticResource EditFreely}"/>
                    </ToggleButton.Content>
                </ToggleButton>

                <StackPanel  HorizontalAlignment="Center" Orientation="Horizontal" Grid.Row="8">
                    <Button Style="{StaticResource ButtonWithNoStyle}" Background="Transparent" ToolTip="{DynamicResource Undo}" Command="{Binding UndoCommand}">
                        <Button.Content>
                            <Image Source="../Images/imgUndoTransparent.png"/>
                        </Button.Content>
                    </Button>
                    <Button Style="{StaticResource ButtonWithNoStyle}" Background="Transparent" Margin="10 0 0 0" ToolTip="{DynamicResource Redo}" Command="{Binding RedoCommand}" >
                        <Button.Content>
                            <Image Source="../Images/imgRedoTransparent.png"/>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
            <StackPanel Grid.Row="4" HorizontalAlignment="Right">
                <Button Style="{StaticResource ButtonWithAccentBackground}" Content="{DynamicResource ApplyChanges}" Command="{Binding SaveCommand}"/>
                <Button Style="{StaticResource ButtonWithAccentBackground}" Margin="10 20 10 0" Content="{DynamicResource CancelChanges}" Command="{Binding CancelCommand}"/>
            </StackPanel>
            <StackPanel Grid.Row="5">
                <ItemsControl Margin="0 10 0 0" Height="150" ItemsSource="{Binding ListItems,UpdateSourceTrigger=PropertyChanged}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid x:Name="Grid1" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource MaxWidthColumnDefinition}"/>
                                    <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Margin="10 0 0 0" Text="{Binding ErrorDescription}"/>

                                <Button Width="50" Height="20" Content="{DynamicResource FixIt}" Grid.Column="1" CommandParameter="{Binding}"
                       Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl},Path=DataContext.FixCommand}" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</UserControl>
