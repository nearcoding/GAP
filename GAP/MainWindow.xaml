<base:BaseWindow x:Class="GAP.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:base="clr-namespace:GAP.ExtendedControls"
                 xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:BLL="clr-namespace:GAP.BL;assembly=GAP.BL"
                 xmlns:visualFx="http://mixmodes.com/visualFx"
                 xmlns:customControl="clr-namespace:GAP.Custom_Controls"
                 x:Name="MainAppWindow"                
                 Opacity="{Binding ViewMenu.Opacity,UpdateSourceTrigger=PropertyChanged}"
                 Title="{Binding Title}"  Style="{StaticResource WindowDialogResize}"
                 Closing="MainWindows_Closing"
                 WindowState="Maximized">
    <Window.Resources>
        <ResourceDictionary>
            <BLL:ColourToColorConverter x:Key="ColorConverter" />
            <BLL:BooleanToVisibilityConveter x:Key="BooleanToVisbilityConverter"/>
            <Storyboard x:Key="test">
                <DoubleAnimation Storyboard.TargetName="TextBlockUndoRedoMessage" Storyboard.TargetProperty="Opacity" From="1.0" To="0" Duration="0:0:6"></DoubleAnimation>
            </Storyboard>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="C"
                    Command="{Binding GraphicMenu.GraphicsAddChartCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="D"
                    Command="{Binding DataMenu.DataCreateDatasetCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="E"
                    Command="{Binding DataMenu.DataExportDataCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="I"
                   Command="{Binding DataMenu.DataImportDataCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="O"
                    Command="{Binding FileMenu.FileLoadFileCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="P" 
                    Modifiers="Control" 
                    Command="{Binding FileMenu.FileNewProjectCommand}"/>
        <KeyBinding Key="S"
                    Command="{Binding FileMenu.FileSaveProjectCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="T"
                    Command="{Binding GraphicMenu.GraphicsAddTrackCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="W"
                    Command="{Binding FileMenu.FileNewWellCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="Y"
                    Command="{Binding EditMenu.EditRedoCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="Z"
                    Command="{Binding EditMenu.EditUndoCommand}"
                    Modifiers="Control" />
    </Window.InputBindings>

    <Grid Name="grid_Main">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   LastChildFill="False">
            <Grid Width="{Binding ElementName=grid_Main, Path=ActualWidth}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                    <ColumnDefinition Style="{StaticResource MaxWidthColumnDefinition}"/>
                    <ColumnDefinition Style="{StaticResource AutoWidthColumnDefinition}"/>
                </Grid.ColumnDefinitions>
                <Menu Name="MainMenu" Grid.Column="0">
                    <MenuItem Header="{DynamicResource FileMenu}">
                        <MenuItem Command="{Binding FileMenu.FileNewProjectCommand}" Header="{DynamicResource NewProject}" InputGestureText="Ctrl+P"/>
                        <MenuItem Command="{Binding FileMenu.FileNewWellCommand}" Header="{DynamicResource NewWell}" InputGestureText="Ctrl+W" />
                        <MenuItem Command="{Binding FileMenu.FileLoadFileCommand}" Header="{DynamicResource LoadFile}" InputGestureText="Ctrl+O" />
                        <MenuItem Name="File_Save" Command="{Binding FileMenu.FileSaveProjectCommand}"
                              Header="{DynamicResource Save}" InputGestureText="Ctrl+S" />
                        <MenuItem Name="File_Save_As" Command="{Binding FileMenu.FileSaveProjectAsCommand}"
                              Header="{DynamicResource SaveAs}" />
                        <Separator />
                        <MenuItem Header="{DynamicResource Print}">
                            <MenuItem Command="{Binding DataMenu.DataPrintDatasetCommand}" Header="{DynamicResource PrintDataset}"/>
                            <MenuItem Command="{Binding GraphicMenu.GraphicsPrintCurveCommand}" Header="{DynamicResource PrintCurve}"/>
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding FileMenu.FileProjectPropertiesCommand}" Header="{DynamicResource ProjectProperties}" />
                        <MenuItem Command="{Binding FileMenu.FileWellPropertiesCommand}" Header="{DynamicResource WellProperties}" />
                        <Separator />
                        <MenuItem Command="{Binding FileMenu.FileExitCommand}" Header="{DynamicResource Exit}" />
                    </MenuItem>
                    <MenuItem Header="{DynamicResource EditMenu}">
                        <MenuItem Command="{Binding EditMenu.EditUndoCommand}" Header="{DynamicResource Undo}" InputGestureText="Ctrl+Z" />
                        <MenuItem Command="{Binding EditMenu.EditRedoCommand}" Header="{DynamicResource Redo}" InputGestureText="Ctrl+Y" />
                        <MenuItem Command="{Binding EditMenu.EditCutCommand}" Header="{DynamicResource Cut}" />
                        <MenuItem Command="{Binding EditMenu.EditCopyCommand}" Header="{DynamicResource Copy}" />
                        <MenuItem Command="{Binding EditMenu.EditPasteCommand}" Header="{DynamicResource Paste}" />
                        <MenuItem Command="{Binding EditMenu.EditDeleteCommand}" Header="{DynamicResource Delete}" />
                        <MenuItem Command="{Binding EditMenu.NotesWindowCommand}" Header="{DynamicResource Notes}"/>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource ViewMenu}">
                        <MenuItem Header="{DynamicResource Zoom}">
                            <MenuItem Command="{Binding ViewMenu.ViewZoomInCommand}" Header="{DynamicResource ZoomIn}" />
                            <MenuItem Command="{Binding ViewMenu.ViewZoomOutCommand}" Header="{DynamicResource ZoomOut}" />
                            <MenuItem Command="{Binding ViewMenu.ViewZoomToScaleCommand}" Header="{DynamicResource ZoomToScale}" />
                            <MenuItem Command="{Binding ViewMenu.ViewGoToMarkCommand}" Header="{DynamicResource GoToMark}" />
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding ViewMenu.ViewMakeTransparentCommand}" Header="{Binding ViewMenu.TransparentText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                        <MenuItem Command="{Binding ViewMenu.ViewShowHideToolbarCommand}" Header="{Binding ViewMenu.ShowHideToolbarText, UpdateSourceTrigger=PropertyChanged}" />
                        <MenuItem Command="{Binding ViewMenu.ViewShowHideObjectNavigatorCommand}" Header="{Binding ViewMenu.ShowHideObjectNavigatorText, UpdateSourceTrigger=PropertyChanged}" />
                        <MenuItem Command="{Binding ViewMenu.ViewCustomizeToolbarCommand}" Header="{DynamicResource CustomizeToolbar}" />
                    </MenuItem>
                    <MenuItem Header="{DynamicResource CalculateMenu}">
                        <MenuItem Command="{Binding CalculateMenu.CalculateOverburdenGradientCommand}" Header="{DynamicResource CalculateOverburdenGradient}" />
                        <MenuItem Command="{Binding CalculateMenu.CalculatePorePressureGradientCommand}" Header="{DynamicResource CalculatePorePressureGradient}" />
                        <MenuItem Command="{Binding CalculateMenu.CalculateFractureGradientCommand}" Header="{DynamicResource CalculateFractureGradient}" />
                        <Separator />
                        <MenuItem Command="{Binding CalculateMenu.CalculateShalePointFilterCommand}" Header="{DynamicResource ShalePointFilter}" />
                        <MenuItem Command="{Binding CalculateMenu.CalculateMathFilterCommand}" Header="{DynamicResource MathFilter}" />
                        <Separator />
                        <MenuItem Command="{Binding CalculateMenu.CalculateAddEquationCommand}" Header="{DynamicResource AddEquation}" />
                    </MenuItem>
                    <MenuItem Header="{DynamicResource GraphicsMenu}">
                        <MenuItem Header="{DynamicResource Chart}">
                            <MenuItem Command="{Binding GraphicMenu.GraphicsAddChartCommand}" Header="{DynamicResource AddChart}" InputGestureText="Ctrl+C" />
                            <MenuItem Command="{Binding GraphicMenu.GraphicsRemoveChartCommand}" Header="{DynamicResource RemoveChart}" />
                            <MenuItem Command="{Binding GraphicMenu.GraphicsChartPropertiesCommand}" Header="{DynamicResource ChartProperties}" />
                        </MenuItem>
                        <MenuItem Header="{DynamicResource Tracks}">
                            <MenuItem Command="{Binding GraphicMenu.GraphicsAddTrackCommand}" Header="{DynamicResource AddTrack}" InputGestureText="Ctrl+T" />
                            <MenuItem Command="{Binding GraphicMenu.GraphicsRemoveTrackCommand}" Header="{DynamicResource RemoveTrack}" />
                            <MenuItem Command="{Binding GraphicMenu.GraphicsTrackPropertiesCommand}" Header="{DynamicResource TrackProperties}" />
                        </MenuItem>
                        <MenuItem Header="{DynamicResource Curve}">
                            <MenuItem Command="{Binding GraphicMenu.GraphicsAddCurveCommand}" Header="{DynamicResource AddCurve}" />
                            <MenuItem Command="{Binding GraphicMenu.GraphicsRemoveCurveCommand}" Header="{DynamicResource RemoveCurve}"/>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource NormalCompactionTrend}">
                            <MenuItem Command="{Binding GraphicMenu.GraphicsAddRemoveNCTCommand}" Header="{DynamicResource AddRemoveNCT}" />
                            <MenuItem Command="{Binding GraphicMenu.GraphicsNCTPropertiesCommand}" Header="{DynamicResource NCTProperties}" />
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource Geology}">
                        <MenuItem Header="{DynamicResource Lithology}">
                            <MenuItem Command="{Binding GeologyMenu.GeologyLithologyPropertiesCommand}"
                                  Header="{DynamicResource LithologyProperties}" />
                            <MenuItem Command="{Binding GeologyMenu.GeologyLithologyAddRemoveCommand}" Header="{DynamicResource Add/RemoveLithology}" />
                            <MenuItem Command="{Binding GeologyMenu.GeologyLithologyShowHideCommand}" Header="{DynamicResource ShowHideLithology}" />
                            <MenuItem Command="{Binding GeologyMenu.GeologyLithologyImportLithologyCommand}" Header="{DynamicResource ImportLithology }" />
                            <MenuItem Command="{Binding GeologyMenu.GeologyLithologyExportLithologyCommand}" Header="{DynamicResource ExportLithology }" />
                        </MenuItem>
                        <MenuItem Header="{DynamicResource FormationTop}">
                            <MenuItem Command="{Binding GeologyMenu.GeologyFormationTopNewCommand}" Header="{DynamicResource NewFormationTop}" />
                            <MenuItem Command="{Binding GeologyMenu.GeologyFormationTopShowHideCommand}" Header="{DynamicResource ShowHideFormationTop}" />
                            <MenuItem Command="{Binding GeologyMenu.GeologyFormationImportFormationCommand}" Header="{DynamicResource ImportFormation}"  />
                            <MenuItem Command="{Binding GeologyMenu.GeologyFormationExportFormationCommand}" Header="{DynamicResource ExportFormation}"   />
                        </MenuItem>
                        <MenuItem Command="{Binding GeologyMenu.GeologyRotaryTableElevationCommand}" Header="{DynamicResource RotaryTableElevation}" />
                        <MenuItem Command="{Binding GeologyMenu.GeologyGroundLevelElevationCommand}" Header="{DynamicResource GroundLevelElevation}" />
                    </MenuItem>
                    <MenuItem Header="{DynamicResource DataMenu}">
                        <MenuItem Name="Data_Import_Data"
                              Command="{Binding DataMenu.DataImportDataCommand}"
                              Header="{DynamicResource ImportData}" InputGestureText="Ctrl+I"/>
                        <MenuItem Name="Data_Export_Data"
                              Command="{Binding DataMenu.DataExportDataCommand}"
                              Header="{DynamicResource ExportData}" InputGestureText="Ctrl+E" />
                        <Separator />
                        <MenuItem Name="Data_Create_Dataset"
                              Command="{Binding DataMenu.DataCreateDatasetCommand}"
                              Header="{DynamicResource CreateDataset}" InputGestureText="Ctrl+D" />
                        <MenuItem Command="{Binding DataMenu.DataEditDatasetCommand}" Header="{DynamicResource EditDataset}" />
                    </MenuItem>
                    <MenuItem Header="{DynamicResource WindowsMenu}">
                        <MenuItem Command="{Binding WindowMenu.WindowsCloseAllProjectsCommand}" Header="{DynamicResource CloseAllProjects}" />
                        <MenuItem Command="{Binding WindowMenu.WindowsCloseAllWindowsCommand}" Header="{DynamicResource CloseAllWindows}" />
                        <MenuItem Command="{Binding WindowMenu.WindowsResetToolbarCommand}" Header="{DynamicResource ResetToolbar}" />
                        <MenuItem Command="{Binding WindowMenu.WindowFullScreenSettingsViewCommand}" Header="{DynamicResource FullScreenSettings}"/>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource HelpMenu}">
                        <MenuItem Command="{Binding HelpMenu.HelpContentsCommand}" Header="{DynamicResource Contents}" />
                        <MenuItem Command="{Binding HelpMenu.HelpIndexCommand}" Header="{DynamicResource Index}" />
                        <MenuItem Command="{Binding HelpMenu.HelpAboutCommand}" Header="{DynamicResource About}" />
                    </MenuItem>
                    <MenuItem Header="{DynamicResource FullScreen}" x:Name="mnuFullScreen" Click="mnuFullScreen_Click"/>
                </Menu>
                <!--<TextBox Style="{StaticResource TextBoxSearch}" Text="{Binding SearchableText, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Grid.Column="2"/>-->
            </Grid>
        </DockPanel>

        <DockPanel Grid.Row="1"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top" 
                   Visibility="{Binding ViewMenu.IsToolBarVisible, Converter={StaticResource BooleanToVisbilityConverter}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                   LastChildFill="False">
            <base:ExtendedToolbar IsEnabled="{Binding ElementName=MainMenu,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Path=IsEnabled}"
                                  Width="{Binding ElementName=grid_Main, Path=ActualWidth}"                     
                                  BorderThickness="1" Background="Transparent"         
                                  DataContext="{Binding ToolbarItems}"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  ToolBarTray.IsLocked="True">
            </base:ExtendedToolbar>
        </DockPanel>
        <visualFx:WindowsManager x:Name="WindowsManager" Grid.Row="2"/>

        <StatusBar Grid.Row="3" IsEnabled="{Binding ElementName=MainMenu,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Path=IsEnabled}"
                                  x:Name="StatusBar1" Background="#FFF4F4F4">
            <StatusBar.Items>
                <StatusBarItem Margin="20 0 0 0">
                    <TextBlock Text="{DynamicResource SetApplicationTheme}" FontWeight="Bold" />
                </StatusBarItem>
                <StatusBarItem>
                    <ComboBox ItemsSource="{Binding Themes}" SelectedItem="{Binding SelectedTheme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="0 0 10 0" Width="20" Height="20"  Background="{Binding ThemeColor, Mode=TwoWay}"/>
                                    <TextBlock Text="{Binding ThemeName}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock Text="{DynamicResource SetTrackTheme}" FontWeight="Bold" />
                </StatusBarItem>
                <StatusBarItem>
                    <ComboBox SelectedItem="{Binding SelectedTrackTheme, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding TrackThemes}" />
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock Text="{DynamicResource SetLanguage}" FontWeight="Bold"/>
                </StatusBarItem>
                <StatusBarItem>
                    <ComboBox SelectedItem="{Binding SelectedLanguage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding Languages}"/>
                </StatusBarItem>

                <StatusBarItem HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <TextBlock x:Name="TextBlockUndoRedoMessage" FontWeight="Bold" Margin="0 0 20 0"/>
                        <TextBlock Text="{DynamicResource ApplicationVersion}" FontWeight="Bold" Margin="0 0 10 0"/>
                        <TextBlock Text="{Binding ApplicationVersion}" FontWeight="Bold" Margin="0 0 20 0"/>
                    </StackPanel>
                </StatusBarItem>
            </StatusBar.Items>
        </StatusBar>

        <controls:ProgressRing  Grid.Row="0" Grid.RowSpan="4" x:Name="ProgressRing"  Foreground="{DynamicResource AccentColorBrush}"/>
    </Grid>
</base:BaseWindow>
